{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SharedModule } from \"./shared/shared.module\";\nimport { environment } from \"../environments/environment\";\nimport { MeintaineDirective } from './services/meintaine.directive';\nlet AppModule = class AppModule {};\nAppModule = __decorate([NgModule({\n  declarations: [AppComponent, MeintaineDirective],\n  imports: [BrowserModule, AppRoutingModule, SharedModule],\n  providers: [{\n    provide: APP_INITIALIZER,\n    multi: true,\n    deps: [ConfigService],\n    useFactory: configService => {\n      return () => {\n        return configService.loadAppConfig();\n      };\n    }\n  }, {\n    provide: APP_INITIALIZER,\n    multi: true,\n    deps: [MaintenanceService],\n    useFactory: maintenanceService => {\n      return () => {\n        return maintenanceService.loadMaintenanceConfig();\n      };\n    }\n  }, ...(environment.production ? PRODUCTION_MODE_INTERCEPTORS : DEV_MODE_INTERCEPTORS)],\n  exports: [],\n  bootstrap: [AppComponent]\n})], AppModule);\nexport { AppModule };","map":{"version":3,"names":["APP_INITIALIZER","NgModule","BrowserModule","AppRoutingModule","AppComponent","SharedModule","environment","MeintaineDirective","AppModule","__decorate","declarations","imports","providers","provide","multi","deps","ConfigService","useFactory","configService","loadAppConfig","MaintenanceService","maintenanceService","loadMaintenanceConfig","production","PRODUCTION_MODE_INTERCEPTORS","DEV_MODE_INTERCEPTORS","exports","bootstrap"],"sources":["C:\\Users\\UÅ¼ytkownik\\WebstormProjects\\babyWhale\\src\\app\\app.module.ts"],"sourcesContent":["import {APP_INITIALIZER, NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {SharedModule} from \"./shared/shared.module\";\nimport {environment} from \"../environments/environment\";\nimport { MeintaineDirective } from './services/meintaine.directive';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MeintaineDirective,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    SharedModule,\n  ],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      deps: [ConfigService],\n      useFactory: (configService: ConfigService) => {\n        return () => {\n          return configService.loadAppConfig();\n        };\n      },\n    },\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      deps: [MaintenanceService],\n      useFactory: (maintenanceService: MaintenanceService) => {\n        return () => {\n          return maintenanceService.loadMaintenanceConfig();\n        };\n      },\n    },\n    ...(environment.production ? PRODUCTION_MODE_INTERCEPTORS : DEV_MODE_INTERCEPTORS),\n  ],\n  exports: [\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n"],"mappings":";AAAA,SAAQA,eAAe,EAAEC,QAAQ,QAAO,eAAe;AACvD,SAAQC,aAAa,QAAO,2BAA2B;AAEvD,SAAQC,gBAAgB,QAAO,sBAAsB;AACrD,SAAQC,YAAY,QAAO,iBAAiB;AAC5C,SAAQC,YAAY,QAAO,wBAAwB;AACnD,SAAQC,WAAW,QAAO,6BAA6B;AACvD,SAASC,kBAAkB,QAAQ,gCAAgC;AAuC5D,IAAMC,SAAS,GAAf,MAAMA,SAAS,GACrB;AADYA,SAAS,GAAAC,UAAA,EArCrBR,QAAQ,CAAC;EACRS,YAAY,EAAE,CACZN,YAAY,EACZG,kBAAkB,CACnB;EACDI,OAAO,EAAE,CACPT,aAAa,EACbC,gBAAgB,EAChBE,YAAY,CACb;EACDO,SAAS,EAAE,CACT;IACEC,OAAO,EAAEb,eAAe;IACxBc,KAAK,EAAE,IAAI;IACXC,IAAI,EAAE,CAACC,aAAa,CAAC;IACrBC,UAAU,EAAGC,aAA4B,IAAI;MAC3C,OAAO,MAAK;QACV,OAAOA,aAAa,CAACC,aAAa,EAAE;MACtC,CAAC;IACH;GACD,EACD;IACEN,OAAO,EAAEb,eAAe;IACxBc,KAAK,EAAE,IAAI;IACXC,IAAI,EAAE,CAACK,kBAAkB,CAAC;IAC1BH,UAAU,EAAGI,kBAAsC,IAAI;MACrD,OAAO,MAAK;QACV,OAAOA,kBAAkB,CAACC,qBAAqB,EAAE;MACnD,CAAC;IACH;GACD,EACD,IAAIhB,WAAW,CAACiB,UAAU,GAAGC,4BAA4B,GAAGC,qBAAqB,CAAC,CACnF;EACDC,OAAO,EAAE,EACR;EACDC,SAAS,EAAE,CAACvB,YAAY;CACzB,CAAC,C,EACWI,SAAS,CACrB;SADYA,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}