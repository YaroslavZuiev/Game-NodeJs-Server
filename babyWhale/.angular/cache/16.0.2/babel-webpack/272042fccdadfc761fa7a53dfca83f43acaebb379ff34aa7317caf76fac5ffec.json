{"ast":null,"code":"import { APP_INITIALIZER } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SharedModule } from \"./shared/shared.module\";\nimport { environment } from \"../environments/environment\";\nimport * as i0 from \"@angular/core\";\nexport class AppModule {}\nAppModule.ɵfac = function AppModule_Factory(t) {\n  return new (t || AppModule)();\n};\nAppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppModule,\n  bootstrap: [AppComponent]\n});\nAppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  providers: [{\n    provide: APP_INITIALIZER,\n    multi: true,\n    deps: [ConfigService],\n    useFactory: configService => {\n      return () => {\n        return configService.loadAppConfig();\n      };\n    }\n  }, {\n    provide: APP_INITIALIZER,\n    multi: true,\n    deps: [MaintenanceService],\n    useFactory: maintenanceService => {\n      return () => {\n        return maintenanceService.loadMaintenanceConfig();\n      };\n    }\n  }, ...(environment.production ? PRODUCTION_MODE_INTERCEPTORS : DEV_MODE_INTERCEPTORS)],\n  imports: [BrowserModule, AppRoutingModule, SharedModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent],\n    imports: [BrowserModule, AppRoutingModule, SharedModule]\n  });\n})();","map":{"version":3,"names":["APP_INITIALIZER","BrowserModule","AppRoutingModule","AppComponent","SharedModule","environment","AppModule","bootstrap","provide","multi","deps","ConfigService","useFactory","configService","loadAppConfig","MaintenanceService","maintenanceService","loadMaintenanceConfig","production","PRODUCTION_MODE_INTERCEPTORS","DEV_MODE_INTERCEPTORS","imports","declarations"],"sources":["C:\\Users\\Użytkownik\\WebstormProjects\\babyWhale\\src\\app\\app.module.ts"],"sourcesContent":["import {APP_INITIALIZER, NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {SharedModule} from \"./shared/shared.module\";\nimport {environment} from \"../environments/environment\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    SharedModule,\n  ],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      deps: [ConfigService],\n      useFactory: (configService: ConfigService) => {\n        return () => {\n          return configService.loadAppConfig();\n        };\n      },\n    },\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      deps: [MaintenanceService],\n      useFactory: (maintenanceService: MaintenanceService) => {\n        return () => {\n          return maintenanceService.loadMaintenanceConfig();\n        };\n      },\n    },\n    ...(environment.production ? PRODUCTION_MODE_INTERCEPTORS : DEV_MODE_INTERCEPTORS),\n  ],\n  exports: [\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n"],"mappings":"AAAA,SAAQA,eAAe,QAAiB,eAAe;AACvD,SAAQC,aAAa,QAAO,2BAA2B;AAEvD,SAAQC,gBAAgB,QAAO,sBAAsB;AACrD,SAAQC,YAAY,QAAO,iBAAiB;AAC5C,SAAQC,YAAY,QAAO,wBAAwB;AACnD,SAAQC,WAAW,QAAO,6BAA6B;;AAsCvD,OAAM,MAAOC,SAAS;AAATA,SAAS,C;mBAATA,SAAS;AAAA;AAATA,SAAS,C;QAATA,SAAS;EAAAC,SAAA,GAFRJ,YAAY;AAAA;AAEbG,SAAS,C;aA3BT,CACT;IACEE,OAAO,EAAER,eAAe;IACxBS,KAAK,EAAE,IAAI;IACXC,IAAI,EAAE,CAACC,aAAa,CAAC;IACrBC,UAAU,EAAGC,aAA4B,IAAI;MAC3C,OAAO,MAAK;QACV,OAAOA,aAAa,CAACC,aAAa,EAAE;MACtC,CAAC;IACH;GACD,EACD;IACEN,OAAO,EAAER,eAAe;IACxBS,KAAK,EAAE,IAAI;IACXC,IAAI,EAAE,CAACK,kBAAkB,CAAC;IAC1BH,UAAU,EAAGI,kBAAsC,IAAI;MACrD,OAAO,MAAK;QACV,OAAOA,kBAAkB,CAACC,qBAAqB,EAAE;MACnD,CAAC;IACH;GACD,EACD,IAAIZ,WAAW,CAACa,UAAU,GAAGC,4BAA4B,GAAGC,qBAAqB,CAAC,CACnF;EAAAC,OAAA,GA1BCpB,aAAa,EACbC,gBAAgB,EAChBE,YAAY;AAAA;;2EA6BHE,SAAS;IAAAgB,YAAA,GAlClBnB,YAAY;IAAAkB,OAAA,GAGZpB,aAAa,EACbC,gBAAgB,EAChBE,YAAY;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}